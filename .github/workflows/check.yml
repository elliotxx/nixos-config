name: "NixOS Configuration Check"

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Nix
        uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-24.05
            
      - name: Setup Home Manager
        run: |
          nix-channel --add https://github.com/nix-community/home-manager/archive/release-24.05.tar.gz home-manager
          nix-channel --update
            
      - name: Validate Nix syntax
        run: |
          find . -name "*.nix" -type f -exec nix-instantiate --parse {} \;
          
      - name: Create hardware configuration
        run: |
          cat > hardware-configuration.nix << 'EOF'
          { config, lib, pkgs, modulesPath, ... }:
          {
            imports = [ (modulesPath + "/profiles/qemu-guest.nix") ];
            
            boot.initrd.availableKernelModules = [ "ahci" "xhci_pci" "virtio_pci" "sr_mod" "virtio_blk" ];
            boot.initrd.kernelModules = [ ];
            boot.kernelModules = [ "kvm-intel" ];
            boot.extraModulePackages = [ ];
            
            nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
            hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
            
            # Minimal required filesystem configuration
            fileSystems."/" = {
              device = "/dev/vda1";
              fsType = "ext4";
            };
            
            swapDevices = [ ];
            
            # Basic networking
            networking.useDHCP = lib.mkDefault true;
          }
          EOF
          
      - name: Check NixOS configuration
        run: |
          export NIX_PATH=$NIX_PATH:home-manager=/nix/var/nix/profiles/per-user/root/channels/home-manager
          
          # Validate main configuration
          nix-instantiate --expr "import <nixpkgs/nixos> { configuration = ./configuration.nix; }" --dry-run
          
          # Build the system configuration
          nix-build '<nixpkgs/nixos>' -A system --dry-run -I nixos-config=./configuration.nix
          
          # Validate individual modules (excluding hardware-configuration.nix)
          for module in modules/*.nix; do
            echo "Checking $module..."
            nix-instantiate --expr "with import <nixpkgs/nixos> {}; (import $module)" --dry-run
          done